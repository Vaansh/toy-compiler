[inlinecmt,  ====== Class declarations ====== //, 1, 1]
[inlinecmt,  ====== Class declarations ====== //, 1, 1]
[id, POLYNOMIAL, 2, 8]
[opencpr, {, 2, 19]
[public, public, 3, 2]
[func, func, 3, 9]
[id, evaluate, 3, 14]
[openpr, (, 3, 22]
[id, x, 3, 23]
[colon, :, 3, 24]
[float, float, 3, 26]
[closepr, ), 3, 31]
[arrow, ->, 3, 33]
[float, float, 3, 36]
[semi, ;, 3, 41]
[public, public, 4, 2]
[func, func, 4, 9]
[id, evaluate2, 4, 14]
[openpr, (, 4, 23]
[id, x, 4, 24]
[colon, :, 4, 25]
[float, float, 4, 27]
[closepr, ), 4, 32]
[arrow, ->, 4, 34]
[float, float, 4, 37]
[semi, ;, 4, 42]
[inlinecmt,  6.2, 4, 64]
[inlinecmt,  6.2, 4, 64]
[semi, ;, 5, 2]
[struct, struct, 7, 1]
[id, POLYNOMIAL, 7, 8]
[opencpr, {, 7, 19]
[inlinecmt,  8.1, 7, 71]
[inlinecmt,  8.1, 7, 71]
[func, func, 8, 9]
[id, evaluate, 8, 14]
[openpr, (, 8, 22]
[id, x, 8, 23]
[colon, :, 8, 24]
[float, float, 8, 26]
[closepr, ), 8, 31]
[arrow, ->, 8, 33]
[float, float, 8, 36]
[semi, ;, 8, 41]
[public, public, 9, 5]
[func, func, 9, 12]
[id, evaluate, 9, 17]
[openpr, (, 9, 25]
[id, x, 9, 26]
[colon, :, 9, 27]
[integer, integer, 9, 29]
[closepr, ), 9, 36]
[arrow, ->, 9, 38]
[integer, integer, 9, 41]
[semi, ;, 9, 48]
[inlinecmt,  9.2, 9, 67]
[inlinecmt,  9.2, 9, 67]
[semi, ;, 10, 2]
[struct, struct, 12, 1]
[id, LINEAR, 12, 8]
[inherits, inherits, 12, 15]
[id, POLYNOMIAL, 12, 24]
[opencpr, {, 12, 35]
[private, private, 13, 2]
[let, let, 13, 10]
[id, a, 13, 14]
[colon, :, 13, 15]
[float, float, 13, 17]
[semi, ;, 13, 22]
[private, private, 14, 2]
[let, let, 14, 10]
[id, b, 14, 14]
[colon, :, 14, 15]
[float, float, 14, 17]
[semi, ;, 14, 22]
[private, private, 15, 2]
[let, let, 15, 10]
[id, b, 15, 14]
[colon, :, 15, 15]
[integer, integer, 15, 17]
[semi, ;, 15, 24]
[inlinecmt,  8.3, 15, 64]
[inlinecmt,  8.3, 15, 64]
[func, func, 17, 9]
[id, build, 17, 14]
[openpr, (, 17, 19]
[id, A, 17, 20]
[colon, :, 17, 21]
[float, float, 17, 23]
[comma, ,, 17, 28]
[id, B, 17, 30]
[colon, :, 17, 31]
[float, float, 17, 33]
[closepr, ), 17, 38]
[arrow, ->, 17, 40]
[id, LINEAR, 17, 43]
[semi, ;, 17, 49]
[public, public, 18, 2]
[func, func, 18, 9]
[id, evaluate, 18, 14]
[openpr, (, 18, 22]
[id, x, 18, 23]
[colon, :, 18, 24]
[float, float, 18, 26]
[closepr, ), 18, 31]
[arrow, ->, 18, 33]
[float, float, 18, 36]
[semi, ;, 18, 41]
[inlinecmt,  9.3, 18, 64]
[inlinecmt,  9.3, 18, 64]
[semi, ;, 19, 2]
[struct, struct, 21, 1]
[id, QUADRATIC, 21, 8]
[inherits, inherits, 21, 18]
[id, POLYNOMIAL, 21, 27]
[opencpr, {, 21, 38]
[private, private, 22, 2]
[let, let, 22, 10]
[id, a, 22, 14]
[colon, :, 22, 15]
[float, float, 22, 17]
[semi, ;, 22, 22]
[inlinecmt,  8.5, 22, 64]
[inlinecmt,  8.5, 22, 64]
[let, let, 23, 10]
[id, b, 23, 14]
[colon, :, 23, 15]
[float, float, 23, 17]
[semi, ;, 23, 22]
[inlinecmt,  8.5, 23, 64]
[inlinecmt,  8.5, 23, 64]
[let, let, 24, 10]
[id, c, 24, 14]
[colon, :, 24, 15]
[float, float, 24, 17]
[semi, ;, 24, 22]
[public, public, 26, 2]
[func, func, 26, 9]
[id, build, 26, 14]
[openpr, (, 26, 19]
[id, A, 26, 20]
[colon, :, 26, 21]
[float, float, 26, 23]
[comma, ,, 26, 28]
[id, B, 26, 30]
[colon, :, 26, 31]
[float, float, 26, 33]
[comma, ,, 26, 38]
[id, C, 26, 40]
[colon, :, 26, 41]
[float, float, 26, 43]
[closepr, ), 26, 48]
[arrow, ->, 26, 50]
[id, QUADRATIC, 26, 53]
[semi, ;, 26, 62]
[public, public, 27, 2]
[func, func, 27, 9]
[id, evaluate, 27, 14]
[openpr, (, 27, 22]
[id, x, 27, 23]
[colon, :, 27, 24]
[float, float, 27, 26]
[closepr, ), 27, 31]
[arrow, ->, 27, 33]
[float, float, 27, 36]
[semi, ;, 27, 41]
[inlinecmt,  9.3, 27, 64]
[inlinecmt,  9.3, 27, 64]
[semi, ;, 28, 2]
[struct, struct, 30, 1]
[id, C, 30, 8]
[inherits, inherits, 30, 10]
[id, E, 30, 19]
[opencpr, {, 30, 21]
[private, private, 31, 2]
[let, let, 31, 10]
[id, a, 31, 14]
[colon, :, 31, 15]
[integer, integer, 31, 17]
[semi, ;, 31, 24]
[closecpr, }, 32, 1]
[semi, ;, 32, 2]
[struct, struct, 34, 1]
[id, D, 34, 8]
[inherits, inherits, 34, 10]
[id, C, 34, 19]
[opencpr, {, 34, 21]
[private, private, 35, 2]
[let, let, 35, 10]
[id, b, 35, 14]
[colon, :, 35, 15]
[integer, integer, 35, 17]
[semi, ;, 35, 24]
[closecpr, }, 36, 1]
[semi, ;, 36, 2]
[struct, struct, 38, 1]
[id, E, 38, 8]
[inherits, inherits, 38, 10]
[id, D, 38, 19]
[opencpr, {, 38, 21]
[inlinecmt,  14.1, 38, 71]
[inlinecmt,  14.1, 38, 71]
[let, let, 39, 10]
[id, c, 39, 14]
[colon, :, 39, 15]
[integer, integer, 39, 17]
[semi, ;, 39, 24]
[closecpr, }, 40, 1]
[semi, ;, 40, 2]
[inlinecmt,  ====== struct implementations ====== //, 43, 1]
[inlinecmt,  ====== struct implementations ====== //, 43, 1]
[id, POLYNOMIAL, 44, 6]
[opencpr, {, 44, 17]
[func, func, 45, 3]
[id, evaluate, 45, 8]
[openpr, (, 45, 16]
[id, x, 45, 17]
[colon, :, 45, 18]
[float, float, 45, 20]
[closepr, ), 45, 25]
[arrow, ->, 45, 27]
[float, float, 45, 30]
[opencpr, {, 46, 3]
[return, return, 47, 5]
[openpr, (, 47, 12]
[intlit, 0, 47, 13]
[closepr, ), 47, 14]
[semi, ;, 47, 15]
[closecpr, }, 48, 3]
[closecpr, }, 49, 1]
[impl, impl, 51, 1]
[id, LINEAR, 51, 6]
[opencpr, {, 51, 13]
[func, func, 52, 3]
[id, build, 52, 8]
[openpr, (, 52, 13]
[id, A, 52, 14]
[colon, :, 52, 15]
[float, float, 52, 17]
[comma, ,, 52, 22]
[id, B, 52, 24]
[colon, :, 52, 25]
[float, float, 52, 27]
[closepr, ), 52, 32]
[arrow, ->, 52, 34]
[id, LINEAR, 52, 37]
[opencpr, {, 53, 3]
[let, let, 54, 5]
[id, new_function, 54, 9]
[colon, :, 54, 21]
[id, LINEAR, 54, 23]
[semi, ;, 54, 29]
[id, new_function, 55, 5]
[dot, ., 55, 17]
[id, a, 55, 18]
[assgn, =, 55, 20]
[id, A, 55, 22]
[semi, ;, 55, 23]
[id, new_function, 56, 5]
[dot, ., 56, 17]
[id, b, 56, 18]
[assgn, =, 56, 20]
[id, B, 56, 22]
[semi, ;, 56, 23]
[return, return, 57, 5]
[openpr, (, 57, 12]
[id, new_function, 57, 13]
[closepr, ), 57, 25]
[semi, ;, 57, 26]
[closecpr, }, 58, 3]
[func, func, 59, 3]
[id, evaluate, 59, 8]
[openpr, (, 59, 16]
[id, x, 59, 17]
[colon, :, 59, 18]
[float, float, 59, 20]
[closepr, ), 59, 25]
[arrow, ->, 59, 27]
[float, float, 59, 30]
[opencpr, {, 60, 3]
[let, let, 61, 5]
[id, result, 61, 9]
[colon, :, 61, 15]
[float, float, 61, 17]
[semi, ;, 61, 22]
[id, result, 62, 5]
[assgn, =, 62, 12]
[floatlit, 0.0, 62, 14]
[semi, ;, 62, 17]
[id, result, 63, 5]
[assgn, =, 63, 12]
[id, a, 63, 14]
[mult, *, 63, 16]
[id, x, 63, 18]
[plus, +, 63, 20]
[id, b, 63, 22]
[semi, ;, 63, 23]
[return, return, 64, 5]
[openpr, (, 64, 12]
[id, result, 64, 13]
[closepr, ), 64, 19]
[semi, ;, 64, 20]
[closecpr, }, 65, 3]
[closecpr, }, 66, 1]
[impl, impl, 68, 1]
[id, QUADRATIC, 68, 6]
[opencpr, {, 68, 16]
[func, func, 69, 3]
[id, evaluate, 69, 8]
[openpr, (, 69, 16]
[id, x, 69, 17]
[colon, :, 69, 18]
[float, float, 69, 20]
[closepr, ), 69, 25]
[arrow, ->, 69, 27]
[float, float, 69, 30]
[opencpr, {, 70, 3]
[let, let, 71, 5]
[id, result, 71, 9]
[colon, :, 71, 15]
[float, float, 71, 17]
[semi, ;, 71, 22]
[inlinecmt, Using Horner's method, 72, 5]
[inlinecmt, Using Horner's method, 72, 5]
[assgn, =, 73, 12]
[id, a, 73, 14]
[semi, ;, 73, 15]
[id, result, 74, 5]
[assgn, =, 74, 12]
[id, result, 74, 14]
[mult, *, 74, 21]
[id, x, 74, 23]
[plus, +, 74, 25]
[id, b, 74, 27]
[semi, ;, 74, 28]
[id, result, 75, 5]
[assgn, =, 75, 12]
[id, result, 75, 14]
[mult, *, 75, 21]
[id, x, 75, 23]
[plus, +, 75, 25]
[id, c, 75, 27]
[semi, ;, 75, 28]
[return, return, 76, 5]
[openpr, (, 76, 12]
[id, result, 76, 13]
[closepr, ), 76, 19]
[semi, ;, 76, 20]
[closecpr, }, 77, 3]
[func, func, 78, 3]
[id, build, 78, 8]
[openpr, (, 78, 13]
[id, A, 78, 14]
[colon, :, 78, 15]
[float, float, 78, 17]
[comma, ,, 78, 22]
[id, B, 78, 24]
[colon, :, 78, 25]
[float, float, 78, 27]
[comma, ,, 78, 32]
[id, C, 78, 34]
[colon, :, 78, 35]
[float, float, 78, 37]
[closepr, ), 78, 42]
[arrow, ->, 78, 44]
[id, QUADRATIC, 78, 47]
[opencpr, {, 79, 3]
[let, let, 80, 5]
[id, new_function, 80, 9]
[colon, :, 80, 21]
[id, QUADRATIC, 80, 23]
[semi, ;, 80, 33]
[id, new_function, 81, 5]
[dot, ., 81, 17]
[id, a, 81, 18]
[assgn, =, 81, 20]
[id, A, 81, 22]
[plus, +, 81, 24]
[id, B, 81, 26]
[mult, *, 81, 28]
[intlit, 3, 81, 30]
[semi, ;, 81, 31]
[inlinecmt,  10.1, 81, 71]
[inlinecmt,  10.1, 81, 71]
[dot, ., 82, 17]
[id, b, 82, 18]
[assgn, =, 82, 20]
[id, B, 82, 22]
[semi, ;, 82, 23]
[id, new_function, 83, 5]
[dot, ., 83, 17]
[id, c, 83, 18]
[assgn, =, 83, 20]
[intlit, 1, 83, 22]
[semi, ;, 83, 23]
[inlinecmt,  10.2, 83, 71]
[inlinecmt,  10.2, 83, 71]
[openpr, (, 84, 12]
[intlit, 1, 84, 13]
[closepr, ), 84, 14]
[semi, ;, 84, 15]
[inlinecmt,  10.3, 84, 71]
[inlinecmt,  10.3, 84, 71]
[func, func, 86, 3]
[id, build2, 86, 8]
[openpr, (, 86, 14]
[id, A, 86, 15]
[colon, :, 86, 16]
[float, float, 86, 18]
[comma, ,, 86, 23]
[id, B, 86, 25]
[colon, :, 86, 26]
[float, float, 86, 28]
[comma, ,, 86, 33]
[id, C, 86, 35]
[colon, :, 86, 36]
[float, float, 86, 38]
[closepr, ), 86, 43]
[arrow, ->, 86, 45]
[id, QUADRATIC, 86, 48]
[inlinecmt,  6.1, 86, 71]
[inlinecmt,  6.1, 86, 71]
[let, let, 88, 5]
[id, new_function, 88, 9]
[colon, :, 88, 21]
[id, QUADRATIC, 88, 23]
[semi, ;, 88, 32]
[id, new_function, 89, 5]
[dot, ., 89, 17]
[id, a, 89, 18]
[assgn, =, 89, 20]
[id, A, 89, 22]
[semi, ;, 89, 23]
[id, new_function, 90, 5]
[dot, ., 90, 17]
[id, b, 90, 18]
[assgn, =, 90, 20]
[id, B, 90, 22]
[semi, ;, 90, 23]
[id, new_function, 91, 5]
[dot, ., 91, 17]
[id, c, 91, 18]
[assgn, =, 91, 20]
[id, C, 91, 22]
[semi, ;, 91, 23]
[return, return, 92, 5]
[openpr, (, 92, 12]
[id, new_function, 92, 13]
[closepr, ), 92, 25]
[semi, ;, 92, 26]
[closecpr, }, 93, 3]
[closecpr, }, 94, 1]
[func, func, 96, 1]
[id, f, 96, 6]
[openpr, (, 96, 7]
[id, i, 96, 8]
[colon, :, 96, 9]
[integer, integer, 96, 11]
[closepr, ), 96, 18]
[arrow, ->, 96, 20]
[void, void, 96, 23]
[opencpr, {, 96, 28]
[closecpr, }, 96, 29]
[func, func, 97, 1]
[id, f, 97, 6]
[openpr, (, 97, 7]
[id, i, 97, 8]
[colon, :, 97, 9]
[integer, integer, 97, 11]
[closepr, ), 97, 18]
[arrow, ->, 97, 20]
[void, void, 97, 23]
[opencpr, {, 97, 28]
[closecpr, }, 97, 29]
[inlinecmt,  8.2, 97, 70]
[inlinecmt,  8.2, 97, 70]
[id, f, 98, 6]
[openpr, (, 98, 7]
[id, i, 98, 8]
[colon, :, 98, 9]
[integer, integer, 98, 11]
[comma, ,, 98, 18]
[id, j, 98, 20]
[colon, :, 98, 21]
[integer, integer, 98, 23]
[closepr, ), 98, 30]
[arrow, ->, 98, 32]
[integer, integer, 98, 35]
[opencpr, {, 98, 43]
[closecpr, }, 98, 44]
[inlinecmt,  9.1, 98, 70]
[inlinecmt,  9.1, 98, 70]
[id, f3, 100, 6]
[openpr, (, 100, 8]
[id, p1, 100, 9]
[colon, :, 100, 11]
[integer, integer, 100, 13]
[openspr, [, 100, 20]
[intlit, 2, 100, 21]
[closespr, ], 100, 22]
[openspr, [, 100, 23]
[intlit, 3, 100, 24]
[closespr, ], 100, 25]
[closepr, ), 100, 26]
[arrow, ->, 100, 28]
[integer, integer, 100, 31]
[opencpr, {, 100, 39]
[closecpr, }, 100, 40]
[inlinecmt,  ====== main ====== //, 103, 1]
[inlinecmt,  ====== main ====== //, 103, 1]
[id, main, 104, 6]
[openpr, (, 104, 10]
[closepr, ), 104, 11]
[arrow, ->, 104, 13]
[void, void, 104, 16]
[opencpr, {, 105, 1]
[let, let, 106, 3]
[id, a, 106, 7]
[colon, :, 106, 8]
[id, a, 106, 10]
[semi, ;, 106, 11]
[inlinecmt,  11.5, 106, 69]
[inlinecmt,  11.5, 106, 69]
[id, c, 107, 7]
[colon, :, 107, 8]
[id, C, 107, 10]
[semi, ;, 107, 11]
[let, let, 108, 3]
[id, f1, 108, 7]
[colon, :, 108, 9]
[id, LINEAR, 108, 11]
[semi, ;, 108, 17]
[let, let, 109, 3]
[id, f2, 109, 7]
[colon, :, 109, 9]
[id, QUADRATIC, 109, 11]
[semi, ;, 109, 20]
[let, let, 110, 3]
[id, counter, 110, 7]
[colon, :, 110, 14]
[integer, integer, 110, 16]
[semi, ;, 110, 23]
[let, let, 111, 3]
[id, counter, 111, 7]
[colon, :, 111, 14]
[float, float, 111, 16]
[semi, ;, 111, 21]
[inlinecmt,  8.4, 111, 69]
[inlinecmt,  8.4, 111, 69]
[id, i, 112, 7]
[colon, :, 112, 8]
[integer, integer, 112, 10]
[openspr, [, 112, 17]
[intlit, 2, 112, 18]
[closespr, ], 112, 19]
[openspr, [, 112, 20]
[intlit, 3, 112, 21]
[closespr, ], 112, 22]
[semi, ;, 112, 23]
[let, let, 113, 3]
[id, j, 113, 7]
[colon, :, 113, 8]
[integer, integer, 113, 10]
[openspr, [, 113, 17]
[intlit, 1, 113, 18]
[closespr, ], 113, 19]
[openspr, [, 113, 20]
[intlit, 2, 113, 21]
[closespr, ], 113, 22]
[openspr, [, 113, 23]
[intlit, 3, 113, 24]
[closespr, ], 113, 25]
[semi, ;, 113, 26]
[id, f1, 114, 3]
[assgn, =, 114, 6]
[id, f1, 114, 8]
[dot, ., 114, 10]
[id, build, 114, 11]
[openpr, (, 114, 16]
[intlit, 2, 114, 17]
[comma, ,, 114, 18]
[floatlit, 3.5, 114, 20]
[closepr, ), 114, 23]
[semi, ;, 114, 24]
[id, f2, 115, 3]
[assgn, =, 115, 6]
[id, f2, 115, 8]
[dot, ., 115, 10]
[id, build, 115, 11]
[openpr, (, 115, 16]
[minus, -, 115, 17]
[floatlit, 2.0, 115, 18]
[comma, ,, 115, 21]
[floatlit, 1.0, 115, 23]
[comma, ,, 115, 26]
[floatlit, 0.0, 115, 28]
[closepr, ), 115, 31]
[semi, ;, 115, 32]
[id, c, 116, 3]
[dot, ., 116, 4]
[id, b, 116, 5]
[assgn, =, 116, 7]
[intlit, 1, 116, 9]
[semi, ;, 116, 10]
[inlinecmt,  11.2, 116, 69]
[inlinecmt,  11.2, 116, 69]
[assgn, =, 117, 11]
[id, c, 117, 13]
[dot, ., 117, 14]
[id, f, 117, 15]
[openpr, (, 117, 16]
[closepr, ), 117, 17]
[semi, ;, 117, 18]
[inlinecmt,  11.3, 117, 69]
[inlinecmt,  11.3, 117, 69]
[openpr, (, 118, 12]
[closepr, ), 118, 13]
[semi, ;, 118, 14]
[inlinecmt,  11.4, 118, 69]
[inlinecmt,  11.4, 118, 69]
[assgn, =, 119, 11]
[id, a, 119, 13]
[semi, ;, 119, 14]
[inlinecmt,  11.1, 119, 69]
[inlinecmt,  11.1, 119, 69]
[openpr, (, 120, 4]
[intlit, 1, 120, 5]
[comma, ,, 120, 6]
[intlit, 1, 120, 7]
[comma, ,, 120, 8]
[intlit, 1, 120, 9]
[closepr, ), 120, 10]
[semi, ;, 120, 11]
[inlinecmt,  12.1, 120, 69]
[inlinecmt,  12.1, 120, 69]
[openpr, (, 121, 4]
[floatlit, 1.2, 121, 5]
[comma, ,, 121, 8]
[intlit, 1, 121, 9]
[closepr, ), 121, 10]
[semi, ;, 121, 11]
[inlinecmt,  12.2, 121, 69]
[inlinecmt,  12.2, 121, 69]
[openspr, [, 122, 4]
[intlit, 2, 122, 5]
[closespr, ], 122, 6]
[assgn, =, 122, 8]
[intlit, 1, 122, 10]
[semi, ;, 122, 11]
[inlinecmt,  13.1, 122, 69]
[inlinecmt,  13.1, 122, 69]
[openspr, [, 123, 4]
[intlit, 2, 123, 5]
[closespr, ], 123, 6]
[openspr, [, 123, 7]
[floatlit, 1.3, 123, 8]
[closespr, ], 123, 11]
[assgn, =, 123, 13]
[intlit, 2, 123, 15]
[semi, ;, 123, 16]
[inlinecmt,  13.2, 123, 69]
[inlinecmt,  13.2, 123, 69]
[openpr, (, 124, 5]
[id, j, 124, 6]
[closepr, ), 124, 7]
[semi, ;, 124, 8]
[inlinecmt,  13.3, 124, 69]
[inlinecmt,  13.3, 124, 69]
[dot, ., 125, 10]
[id, x, 125, 11]
[assgn, =, 125, 13]
[intlit, 1, 125, 15]
[semi, ;, 125, 16]
[inlinecmt,  15.1, 125, 69]
[inlinecmt,  15.1, 125, 69]
[openpr, (, 126, 8]
[id, counter, 126, 9]
[lesseq, <=, 126, 17]
[intlit, 10, 126, 20]
[closepr, ), 126, 22]
[opencpr, {, 127, 3]
[write, write, 128, 5]
[openpr, (, 128, 10]
[id, counter, 128, 11]
[closepr, ), 128, 18]
[semi, ;, 128, 19]
[write, write, 129, 5]
[openpr, (, 129, 10]
[id, f1, 129, 11]
[dot, ., 129, 13]
[id, evaluate, 129, 14]
[openpr, (, 129, 22]
[id, counter, 129, 23]
[closepr, ), 129, 30]
[closepr, ), 129, 31]
[semi, ;, 129, 32]
[write, write, 130, 5]
[openpr, (, 130, 10]
[id, f2, 130, 11]
[dot, ., 130, 13]
[id, evaluate, 130, 14]
[openpr, (, 130, 22]
[id, counter, 130, 23]
[closepr, ), 130, 30]
[closepr, ), 130, 31]
[semi, ;, 130, 32]
[closecpr, }, 131, 3]
[semi, ;, 131, 4]
[closecpr, }, 132, 1]
[unclosedcmt, Unclosed multi-line comment, 134, 1]
