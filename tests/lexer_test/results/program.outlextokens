[blockcmt, b'*\\n\\n * Licenses\\n\\n ', 1, 1]
[id, import, 5, 1]
[id, example, 5, 8]
[dot, ., 5, 15]
[id, library, 5, 16]
[semi, ;, 5, 23]
[inlinecmt,  Import example library, 5, 27]
[public, public, 7, 1]
[id, Example, 7, 8]
[inherits, inherits, 7, 16]
[id, Test, 7, 25]
[impl, impl, 7, 30]
[id, TestLib, 7, 35]
[opencpr, {, 7, 43]
[public, public, 8, 5]
[func, func, 8, 12]
[id, main, 8, 17]
[openpr, (, 8, 21]
[self, self, 8, 22]
[comma, ,, 8, 26]
[id, name, 8, 28]
[closepr, ), 8, 32]
[arrow, ->, 8, 34]
[float, float, 8, 37]
[opencpr, {, 8, 43]
[inlinecmt,  Variable declaration, 9, 9]
[var, var, 10, 9]
[id, name, 10, 14]
[semi, ;, 10, 18]
[float, float, 11, 3]
[id, bank, 11, 9]
[semi, ;, 11, 13]
[integer, integer, 12, 9]
[id, age, 12, 17]
[semi, ;, 12, 20]
[inlinecmt,  Random language stuff, 14, 9]
[struct, struct, 15, 9]
[id, lib, 15, 16]
[assgn, =, 15, 20]
[id, example, 15, 22]
[dot, ., 15, 29]
[id, library, 15, 30]
[semi, ;, 15, 37]
[id, list, 16, 3]
[assgn, =, 16, 8]
[openspr, [, 16, 10]
[closespr, ], 16, 11]
[semi, ;, 16, 12]
[integer, integer, 18, 3]
[id, idx, 18, 11]
[assgn, =, 18, 15]
[intlit, 0, 18, 17]
[semi, ;, 18, 18]
[while, while, 19, 9]
[openpr, (, 19, 15]
[id, name, 19, 16]
[not, !, 19, 21]
[assgn, =, 19, 22]
[id, abc, 19, 24]
[closepr, ), 19, 27]
[or, |, 19, 29]
[openpr, (, 19, 31]
[id, age, 19, 32]
[neq, <>, 19, 36]
[intlit, 3, 19, 39]
[id, and, 19, 41]
[not, !, 19, 45]
[id, bank, 19, 46]
[closepr, ), 19, 50]
[opencpr, {, 19, 52]
[if, if, 20, 4]
[id, len, 20, 7]
[openpr, (, 20, 10]
[id, list, 20, 11]
[closepr, ), 20, 15]
[eq, ==, 20, 17]
[intlit, 0, 20, 20]
[opencpr, {, 20, 22]
[id, list, 21, 5]
[openspr, [, 21, 9]
[id, idx, 21, 10]
[closespr, ], 21, 13]
[assgn, =, 21, 15]
[id, bank, 21, 17]
[semi, ;, 21, 21]
[closecpr, }, 22, 4]
[else, else, 22, 6]
[opencpr, {, 22, 11]
[id, idx, 23, 5]
[assgn, =, 23, 9]
[id, idx, 23, 11]
[plus, +, 23, 15]
[intlit, 1, 23, 17]
[semi, ;, 23, 18]
[id, bank, 24, 5]
[assgn, =, 24, 10]
[id, bank, 24, 12]
[minus, -, 24, 17]
[id, idx, 24, 19]
[semi, ;, 24, 22]
[closecpr, }, 25, 4]
[closecpr, }, 26, 3]
[return, return, 28, 3]
[id, bank, 28, 10]
[semi, ;, 28, 14]
[closecpr, }, 29, 5]
[closecpr, }, 30, 1]
