[eq, ==, 1, 1]
[plus, +, 1, 4]
[or, |, 1, 6]
[openpr, (, 1, 8]
[semi, ;, 1, 10]
[if, if, 1, 12]
[public, public, 1, 16]
[read, read, 1, 23]
[neq, <>, 2, 1]
[minus, -, 2, 4]
[and, &, 2, 6]
[closepr, ), 2, 8]
[comma, ,, 2, 10]
[then, then, 2, 12]
[private, private, 2, 17]
[write, write, 2, 25]
[lt, <, 3, 1]
[mult, *, 3, 3]
[not, !, 3, 5]
[opencpr, {, 3, 7]
[dot, ., 3, 9]
[else, else, 3, 11]
[func, func, 3, 16]
[return, return, 3, 21]
[gt, >, 4, 1]
[div, /, 4, 3]
[closecpr, }, 4, 6]
[colon, :, 4, 8]
[integer, integer, 4, 10]
[var, var, 4, 18]
[self, self, 4, 22]
[lesseq, <=, 5, 1]
[assgn, =, 5, 4]
[openspr, [, 5, 7]
[sro, ::, 5, 9]
[float, float, 5, 12]
[struct, struct, 5, 18]
[inherits, inherits, 5, 25]
[greateq, >=, 6, 1]
[closespr, ], 6, 6]
[arrow, ->, 6, 8]
[void, void, 6, 11]
[while, while, 6, 16]
[let, let, 6, 22]
[func, func, 7, 7]
[impl, impl, 7, 12]
[intlit, 0, 13, 1]
[intlit, 0, 14, 1]
[intlit, 1, 14, 2]
[intlit, 0, 15, 1]
[intlit, 0, 15, 2]
[intlit, 10, 15, 3]
[intlit, 12, 16, 1]
[intlit, 123, 17, 1]
[intlit, 12345, 18, 1]
[intlit, 0, 20, 1]
[floatlit, 1.23, 20, 2]
[floatlit, 1.23, 21, 1]
[intlit, 0, 21, 5]
[intlit, 0, 21, 6]
[intlit, 0, 22, 1]
[floatlit, 1.23, 22, 2]
[intlit, 0, 22, 6]
[floatlit, 1.23, 24, 1]
[floatlit, 12.34, 25, 1]
[floatlit, 120.34e0, 26, 1]
[dot, ., 26, 9]
[intlit, 1, 26, 10]
[floatlit, 12345.6789e-123, 27, 1]
[id, e, 28, 1]
[minus, -, 28, 2]
[intlit, 123, 28, 3]
[id, abc, 30, 1]
[id, abc1, 31, 1]
[id, a1bc, 32, 1]
[id, abc_, 33, 1]
[intlit, 1, 33, 6]
[id, abc, 33, 7]
[id, abc1_abc, 34, 1]
[inlinecmt,  this is an inline comment, 36, 1]
[blockcmt, b' this is a single line block comment ', 38, 1]
[blockcmt, b' this is a \\n\\nmultiple line\\n\\nblock comment \\n\\n', 40, 1]
[blockcmt, b' this is an imbricated \\n\\n/* block comment\\n\\n', 45, 1]
[mult, *, 48, 1]
[div, /, 48, 2]
